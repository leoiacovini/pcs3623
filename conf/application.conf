
# Play! Framework settings
play.crypto.secret = "changeme"
play.editor="http://localhost:63342/api/file/?file=%s&line=%s"
play.i18n.langs = [ "en" ]
play.modules.enabled += "scalikejdbc.PlayModule"
play.modules.enabled += "scalikejdbc.PlayDBApiAdapterModule"
play.modules.enabled += "org.flywaydb.play.PlayModule"
db.default.migration.auto=true

# JDBC settings
db.default.driver="org.postgresql.Driver"
db.default.url="jdbc:postgresql://192.168.99.100:5432/poli-room"
db.default.username="poli-room"
db.default.password="poli-room"

# Connection Pool settings
db.default.poolInitialSize=5
db.default.poolMaxSize=20
db.default.poolConnectionTimeoutMillis=1000

//play.evolutions.db.default.autoApply=true
play.crypto.secret=abcdefghijk

# Routes
host = "http://localhost:9000"

routes: {
  "login_user":          {url: "/api/user/login",                   accessor: "any", method: "POST"},
  "register_user":       {url: "/api/users",                        accessor: "any", method: "POST"},

  "get_room":            {url: "/api/rooms/:id",                    accessor: "any", method: "GET"},
  "get_buildings":       {url: "/api/buildings",                    accessor: "any", method: "GET"},
  "register_room":       {url: "/api/rooms",                        accessor: "any", method: "POST"},
  "bulding_rooms":       {url: "/api/buildings/:building/rooms",    accessor: "any", method: "GET"},
  "rooms_per_building":  {url: "/api/buildings/rooms",              accessor: "any", method: "GET"},
  "delete_room":         {url: "/api/rooms/:id",                    accessor: "any", method: "DELETE"},

  "room_events":         {url: "/api/rooms/:id/events",             accessor: "any", method: "GET"},
  "register_events":     {url: "/api/rooms/:id/events",             accessor: "any", method: "POST"},
  "delete_event":        {url: "/api/events/:id",                   accessor: "any", method: "DELETE"},

  "room_problems":       {url: "/api/rooms/:id/problems",           accessor: "any", method: "GET"},
  "register_problem":    {url: "/api/rooms/:id/problems",           accessor: "any", method: "POST"},
  "delete_problem":      {url: "/api/problems/:id",                 accessor: "any", method: "DELETE"},

  "room_features":       {url: "/api/rooms/:id/features",           accessor: "any", method: "GET"},
  "register_feature":    {url: "/api/rooms/:id/features",           accessor: "any", method: "POST"},
  "delete_features":     {url: "/api/features/:id",                 accessor: "any", method: "DELETE"}
}

jwtSecretKey = "jwtSecretKey"

buildings: ["Elétrica", "Biênio", "Mecânica", "Produção", "Materiais", "Química", "Civil", "Administração"]
